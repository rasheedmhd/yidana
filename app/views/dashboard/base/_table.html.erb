<%
  # locals: {
  #   table: "instance of Pu::Builders::Table"
  # }

  resource_class = table.model
  resources = table.records
  record_actions = table.record_actions
  search_object = table.search_object
%>
<div class="row">
  <% unless resources.any? %>
    <div class="col-12">
      <%=
        render 'shared/empty_card', message: "You have no #{resource_name_plural(resource_class).downcase}" do
          can_perform?(resource_class, :create?) do
            link_to "Create #{resource_name(resource_class)}", adapt_route_args(resource_class, action: :new), class: 'btn btn-outline-primary'
          end
        end
      %>
    </div>
  <% else %>
    <div id="table-container" class="col-12 table-responsive max-vh-75 py-2" data-controller="scroll-preserver" data-action="scroll->scroll-preserver#scrolled"  >
      <table class="table table-hover table-striped my-0">
        <thead class="sticky-top">
          <tr>
            <th scope="col" class="text-center resource-table-col-id"><%= sort_link(search_object, :id, '#', class: "text-decoration-none") %></th>
            <% table.columns.each do |name, column| %>
              <th scope="col" class="resource-table-col-attr">
                <% if resource_class.ransortable_attributes.include? name.to_s %>
                  <%= sort_link(search_object, name, column[:label], class: "text-decoration-none") %>
                <% else %>
                  <%= column[:label] %>
                <% end %>
              </th>
            <% end  %>
            <th scope="col" class="text-center resource-table-col-attr">Actions</th>
          </tr>
        </thead>
        <tbody>
          <% resources.each do |resource| %>
          <tr class="align-middle">
            <td class="text-center">
              <% if policy(resource).show? %>
                <%= link_to resource.id, adapt_route_args(resource), class: "text-decoration-none" %>
              <% else %>
                <%= resource.id %>
              <% end %>
            </td>

            <% table.columns.each do |name, column| %>
              <% column[:value] = resource.send(name) %>
              <%= render 'table_cell', column: %>
            <% end  %>

            <td class="text-center resource-table-cell-actions">
              <%=
                render partial: 'table_actions', locals: {
                  actions: record_actions.permitted_actions_for(policy(resource)),
                  resource: resource
                }
              %>
            </td>
          </tr>
          <% end %>
        </tbody>
      </table>
    </div>
    <% if table.pagination.present?  %>
      <div class="col-12">
        <%= render 'pagination', pagination: table.pagination %>
      </div>
    <% end  %>
  <% end %>
</div>
