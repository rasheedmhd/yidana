<%= simple_form_for organisation do |f| %>
  <div class="row py-2">
    <div class="col-12 text-end">
      <%= f.button :submit, class: "btn btn-sm btn-outline-primary" %>
    </div>
  </div>

  <div class="row row-gap-2">
    <div class="container">
      <div class="form-errors">
        <%= f.error_notification %>
        <%= f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present? %>
      </div>
    </div>

    <div class="form-inputs">
      <%= f.input :name if can_write_field?(organisation, :name) %>
      <%= f.input :headline, input_html: { data: { controller:"textarea-autogrow" } } if can_write_field?(organisation, :headline) %>
      <%= f.input :description, input_html: { data: { controller:"textarea-autogrow" } } if can_write_field?(organisation, :description) %>
      <%= f.input :website_url if can_write_field?(organisation, :website_url) %>
      <%= f.input :company_type, collection: CompanyType.collection, as: :radio_buttons if can_write_field?(organisation, :company_type) %>
      <%= f.input :company_size, collection: CompanySize.collection, as: :radio_buttons if can_write_field?(organisation, :industry) %>
      <%= f.input :industry, collection: Industry.collection, as: :check_boxes, wrapper: :vertical_collection_inline  if can_write_field?(organisation, :country)%>
      <%= f.input :country, collection: Country.collection if can_write_field?(organisation, :name) %>
      <%#= f.input :benefits %>
      <%= f.input :joel_test, collection: JoelTest.collection, as: :check_boxes if can_write_field?(organisation, :joel_test) %>
    </div>

    <div class="form-actions">
      <%= f.button :submit, class: "btn btn-outline-primary" %>
    </div>
  </div>
<% end %>
